<UserControl x:Class="LitWiki.Views.HierarchyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:tool="clr-namespace:LitWiki.Tools"
             xmlns:ctrl="clr-namespace:CommonControls;assembly=CommonControls"
             xmlns:m="clr-namespace:LitWiki.Models"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:col="clr-namespace:System.Collections.Generic;assembly=netstandard"
             xmlns:local="clr-namespace:LitWiki.Views"
             xmlns:vm="clr-namespace:LitWiki.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type vm:HierarchyViewModel}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <tool:BooleanToVisibilityConverter x:Key="BoolVisibilityConvertor"/>
        <Style x:Key="SwitchEditableTextBox"/>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <!--        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>  -->
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBox x:Name="SearchBar" HorizontalAlignment="Stretch">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction Command="{Binding FilterItemsByNameCommand}" CommandParameter="{Binding ElementName=SearchBar, Path=Text}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBox.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding FilterItemsByNameCommand}" CommandParameter="{Binding ElementName=SearchBar, Path=Text}"/>
            </TextBox.InputBindings>
        </TextBox>
        <TextBlock IsHitTestVisible="False" Text="Введите строку для поиска..." VerticalAlignment="Center" HorizontalAlignment="Left" 
                   Margin="6,0,0,0" Foreground="DarkGray">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=SearchBar}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>


        <TreeView Grid.Row="1" ItemsSource="{Binding RootViewModels}" HorizontalContentAlignment="Stretch">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding DataContext.OpenElementCommand,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                                       CommandParameter="{Binding SelectedItem,
                        RelativeSource={RelativeSource AncestorType=TreeView}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.ItemContainerStyleSelector>
                <tool:HierarchyContainerStyleSelector>
                    <tool:HierarchyContainerStyleSelector.StyleSelectionArguments>
                        <tool:StyleSelectionArgument Type="{x:Type vm:DirectoryViewModel}">
                            <tool:StyleSelectionArgument.Style>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                                    <Setter Property="IsSelected" Value="{Binding IsEdited}"/>
                                </Style>
                            </tool:StyleSelectionArgument.Style>
                        </tool:StyleSelectionArgument>
                        <tool:StyleSelectionArgument Type="{x:Type vm:HierarchyViewModel}">
                            <tool:StyleSelectionArgument.Style>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                                </Style>
                            </tool:StyleSelectionArgument.Style>
                        </tool:StyleSelectionArgument>
                        <tool:StyleSelectionArgument Type="{x:Type vm:GroupViewModel}">
                            <tool:StyleSelectionArgument.Style>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                                </Style>
                            </tool:StyleSelectionArgument.Style>
                        </tool:StyleSelectionArgument>
                        <tool:StyleSelectionArgument Type="{x:Type vm:EntryViewModel}">
                            <tool:StyleSelectionArgument.Style>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle1}">
                                    <Setter Property="IsSelected" Value="{Binding IsEdited}"/>
                                </Style>
                            </tool:StyleSelectionArgument.Style>
                        </tool:StyleSelectionArgument>
                    </tool:HierarchyContainerStyleSelector.StyleSelectionArguments>
                </tool:HierarchyContainerStyleSelector>
            </TreeView.ItemContainerStyleSelector>
            <TreeView.Resources>
                <Style TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="FontSize" Value="14"/>
                    </Style.Setters>
                </Style>

                <HierarchicalDataTemplate DataType="{x:Type vm:HierarchyViewModel}" ItemsSource="{Binding ItemsCollectionView}">
                    <Grid Margin="0,2">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить справочник" Command="{Binding AddDirectoryCommand}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Проект " FontWeight="Bold"/>
                        <TextBlock Text="{Binding Path=Name, StringFormat='&quot;{0}&quot;'}" Grid.Column="1" FontWeight="Bold"/>
                        <TextBlock Grid.Column="2"/>
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type vm:DirectoryViewModel}" ItemsSource="{Binding ItemsCollectionView}">
                    <Grid Margin="0,2">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить">
                                    <MenuItem Header="Запись" Command="{Binding AddEntryCommand}"/>
                                    <MenuItem Header="Группу" Command="{Binding AddGroupCommand}"/>
                                    <MenuItem Header="Справочник" Command="{Binding AddDirectoryCommand}"/>
                                </MenuItem>

                                <MenuItem Header="Удалить" Command="{Binding Path=ParentViewModel.RemoveChildCommand}"
                                        CommandParameter="{Binding}"/>
                                <MenuItem Header="Переименовать" Command="{Binding RenameCommand}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Image Source="/Resources/archive.png" Height="15" Width="15" Margin="4,0"/>
                        <TextBlock x:Name="DirectoryName" Text="{Binding Name}" Grid.Column="1"/>
                        <TextBlock Grid.Column="2"/>
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type vm:GroupViewModel}" ItemsSource="{Binding ItemsCollectionView}">
                    <Grid Margin="0,2">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить">
                                    <MenuItem Header="Запись" Command="{Binding AddEntryCommand}"/>
                                    <MenuItem Header="Группу" Command="{Binding AddGroupCommand}"/>
                                </MenuItem>
                                <MenuItem Header="Удалить" Command="{Binding Path=ParentViewModel.RemoveChildCommand}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="Переименовать" Command="{Binding RenameCommand}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Source="/Resources/folder.png" Height="15" Width="15" Margin="4,0"/>
                        <TextBlock Text="{Binding Name}" Grid.Column="1"/>
                        <TextBlock Grid.Column="2"/>
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type vm:EntryViewModel}">
                    <Grid Margin="0,2">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                <i:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Удалить" Command="{Binding Path=ParentViewModel.RemoveChildCommand}"
                                          CommandParameter="{Binding}"/>
                                <MenuItem Header="Переименовать" Command="{Binding RenameCommand}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Source="/Resources/google-docs.png" Height="15" Width="15" Margin="4,0"/>
                        <TextBlock Text="{Binding Name}" Grid.Column="1"/>
                        <TextBlock Grid.Column="2"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
    
</UserControl>